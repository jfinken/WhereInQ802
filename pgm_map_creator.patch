index b89f07d..d258371 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -3,7 +3,8 @@ project(pgm_map_creator)

 ## Compile as C++11, supported in ROS Kinetic and newer
 # add_compile_options(-std=c++11)
-set (CMAKE_CXX_FLAGS "-g -Wall -std=c++11")
+# set (CMAKE_CXX_FLAGS "-g -Wall -std=c++11")
+set (CMAKE_CXX_FLAGS "-g -Wall -std=c++17 -pthread")

 include (FindPkgConfig)
 if (PKG_CONFIG_FOUND)
@@ -164,11 +165,13 @@ link_directories(${GAZEBO_LIBRARY_DIRS} ${CMAKE_CURRENT_BINARY_DIR}/msgs)
 add_subdirectory(msgs)

 add_executable (request_publisher src/request_publisher.cc)
-target_link_libraries(request_publisher collision_map_creator_msgs ${Boost_LIBRARIES} ${GAZEBO_LIBRARIES} ${SDF_LIBRARIES})
+target_link_libraries(request_publisher collision_map_creator_msgs ${Boost_LIBRARIES}
+        ${GAZEBO_LIBRARIES} ${SDF_LIBRARIES} pthread)
 add_dependencies(request_publisher collision_map_creator_msgs)

 add_library(collision_map_creator SHARED src/collision_map_creator.cc )
-target_link_libraries(collision_map_creator collision_map_creator_msgs ${Boost_LIBRARIES} ${GAZEBO_LIBRARIES} ${SDF_LIBRARIES})
+target_link_libraries(collision_map_creator collision_map_creator_msgs
+        ${Boost_LIBRARIES} ${GAZEBO_LIBRARIES} ${SDF_LIBRARIES})
 add_dependencies(collision_map_creator collision_map_creator_msgs)

 #############
diff --git a/src/collision_map_creator.cc b/src/collision_map_creator.cc
index 7083212..4fdaccb 100644
--- a/src/collision_map_creator.cc
+++ b/src/collision_map_creator.cc
@@ -32,7 +32,8 @@ class CollisionMapCreator : public WorldPlugin
     node = transport::NodePtr(new transport::Node());
     world = _parent;
     // Initialize the node with the world name
-    node->Init(world->GetName());
+    // node->Init(world->GetName());
+    node->Init(world->Name());
     std::cout << "Subscribing to: " << "~/collision_map/command" << std::endl;
     commandSubscriber = node->Subscribe("~/collision_map/command",
       &CollisionMapCreator::create, this);
@@ -88,7 +89,7 @@ class CollisionMapCreator : public WorldPlugin
     start.Z(msg->height());
     end.Z(0.001);

-    gazebo::physics::PhysicsEnginePtr engine = world->GetPhysicsEngine();
+    gazebo::physics::PhysicsEnginePtr engine = world->Physics();
     engine->InitForThread();
     gazebo::physics::RayShapePtr ray =
       boost::dynamic_pointer_cast<gazebo::physics::RayShape>(

